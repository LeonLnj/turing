// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	upiv1 "github.com/caraml-dev/universal-prediction-interface/gen/go/grpc/caraml/upi/v1"
)

// UPILogger is an autogenerated mock type for the UPILogger type
type UPILogger struct {
	mock.Mock
}

// WriteUPIRouterLog provides a mock function with given fields: routerLog
func (_m *UPILogger) WriteUPIRouterLog(routerLog *upiv1.RouterLog) error {
	ret := _m.Called(routerLog)

	var r0 error
	if rf, ok := ret.Get(0).(func(*upiv1.RouterLog) error); ok {
		r0 = rf(routerLog)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUPILogger interface {
	mock.TestingT
	Cleanup(func())
}

// NewUPILogger creates a new instance of UPILogger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUPILogger(t mockConstructorTestingTNewUPILogger) *UPILogger {
	mock := &UPILogger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
