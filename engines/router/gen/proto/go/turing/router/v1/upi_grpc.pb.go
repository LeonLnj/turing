// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: turing/router/v1/upi.proto

package routerv1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UPredictionServiceClient is the client API for UPredictionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UPredictionServiceClient interface {
	PredictValues(ctx context.Context, in *PredictValuesRequest, opts ...grpc.CallOption) (*PredictValuesResponse, error)
}

type uPredictionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUPredictionServiceClient(cc grpc.ClientConnInterface) UPredictionServiceClient {
	return &uPredictionServiceClient{cc}
}

func (c *uPredictionServiceClient) PredictValues(ctx context.Context, in *PredictValuesRequest, opts ...grpc.CallOption) (*PredictValuesResponse, error) {
	out := new(PredictValuesResponse)
	err := c.cc.Invoke(ctx, "/turing.router.v1.UPredictionService/PredictValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UPredictionServiceServer is the server API for UPredictionService service.
// All implementations should embed UnimplementedUPredictionServiceServer
// for forward compatibility
type UPredictionServiceServer interface {
	PredictValues(context.Context, *PredictValuesRequest) (*PredictValuesResponse, error)
}

// UnimplementedUPredictionServiceServer should be embedded to have forward compatible implementations.
type UnimplementedUPredictionServiceServer struct {
}

func (UnimplementedUPredictionServiceServer) PredictValues(context.Context, *PredictValuesRequest) (*PredictValuesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredictValues not implemented")
}

// UnsafeUPredictionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UPredictionServiceServer will
// result in compilation errors.
type UnsafeUPredictionServiceServer interface {
	mustEmbedUnimplementedUPredictionServiceServer()
}

func RegisterUPredictionServiceServer(s grpc.ServiceRegistrar, srv UPredictionServiceServer) {
	s.RegisterService(&UPredictionService_ServiceDesc, srv)
}

func _UPredictionService_PredictValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PredictValuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UPredictionServiceServer).PredictValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/turing.router.v1.UPredictionService/PredictValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UPredictionServiceServer).PredictValues(ctx, req.(*PredictValuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UPredictionService_ServiceDesc is the grpc.ServiceDesc for UPredictionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UPredictionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "turing.router.v1.UPredictionService",
	HandlerType: (*UPredictionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PredictValues",
			Handler:    _UPredictionService_PredictValues_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "turing/router/v1/upi.proto",
}
