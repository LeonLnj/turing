name: Cluster Init
description: Set up Turing Cluster Init

inputs:
  cluster_name: 
    required: true
    description: ''
    default: ''
  istio_version:
    required: true
    description: ''
    default: ''
  knative_version:
    required: true
    description: ''
    default: ''
  knative_istio_version:
    required: true
    description: ''
    default: ''
  local_registry:
    required: true
    description: ''
    default: ''
  
runs:
  using: composite
  steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: "Setup local k8s cluster"
      uses: AbsaOSS/k3d-action@v1.5.0
      with:
        cluster-name: ${{ input.cluster_name }}
        use-default-registry: true
        args: >-
          --servers 1
          --agents 3
          --port 80:80@loadbalancer
          --k3s-server-arg "--no-deploy=traefik,metrics-server"

    - name: Build Docker image
      id: build-image
      working-directory: infra/cluster-init
      shell: bash
      run: |
        set -o pipefail
        make build-image | tee output.log
        echo "::set-output name=cluster-init-version::$(sed -n 's%turing-cluster-init version: \(.*\)%\1%p' output.log)"

    - name: Save Docker image
      shell: bash
      run: |
        docker image save \
          --output cluster-init.${{ steps.build-image.outputs.cluster-init-version }}.tar \
          cluster-init:${{ steps.build-image.outputs.cluster-init-version }}

    - name: Publish images to local registry
      env:
        DOCKER_REPOSITORY: ${{ input.local_registry }}/${{ github.repository }}
        CLUSTER_INIT_VERSION: ${{ steps.build-image.outputs.cluster-init-version }}
      shell: bash
      run: |
        # Cluster init
        docker image load --input cluster-init.${{ env.CLUSTER_INIT_VERSION }}.tar
        docker tag \
          cluster-init:${{ env.CLUSTER_INIT_VERSION }} \
          ${{ env.DOCKER_REPOSITORY }}/cluster-init:${{ env.CLUSTER_INIT_VERSION }}
        docker push ${{ env.DOCKER_REPOSITORY }}/cluster-init:${{ env.CLUSTER_INIT_VERSION }}

    - name: Install Infrastructure
      env:
        CLUSTER_INIT_VERSION: ${{ steps.build-image.outputs.cluster-init-version }}
      shell: bash
      run: |
        kubectl create ns infrastructure
        helm upgrade turing-init infra/charts/turing-init \
          --namespace infrastructure \
          --set image.registry=${{ input.local_registry }}/ \
          --set image.repository=${{ github.repository }}/cluster-init \
          --set image.tag=${{ env.CLUSTER_INIT_VERSION }} \
          --set knative.domains="127.0.0.1.nip.io" \
          --set knative.registriesSkippingTagResolving=${{ input.local_registry }} \
          --install \
          --wait

        # wait for install infra job to finish
        kubectl logs -n infrastructure -f $(kubectl get pod --namespace infrastructure | grep -v 'NAME' | grep -v 'spark' | head -n 1 | awk '{print $1}')
        kubectl get pod --all-namespaces
        kubectl get svc --all-namespaces
        kubectl wait -n infrastructure --for=condition=complete --timeout=10m job/turing-init-spark-operator-webhook-init
        # Might fail the first time but the 2nd run should work, rarely fails on the first try though.
        kubectl wait -n infrastructure --for=condition=complete --timeout=10m job/turing-init-init
